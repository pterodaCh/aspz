#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <dirent.h>
#include <string.h>
#include <errno.h>

void check_access(const char *filepath) {
    printf("Access check for: %s\n", filepath);

    printf("  - Read: %s\n", access(filepath, R_OK) == 0 ? "ALLOWED" : strerror(errno));
    printf("  - Write: %s\n", access(filepath, W_OK) == 0 ? "ALLOWED" : strerror(errno));
    printf("  - Execute: %s\n\n", access(filepath, X_OK) == 0 ? "ALLOWED" : strerror(errno));
}

void list_dir(const char *path) {
    char cmd[512];
    snprintf(cmd, sizeof(cmd), "ls -ld %s; ls -l %s | head -n 5", path, path);
    printf("\ncomman ls -l for %s\n", path);
    system(cmd);
}

void try_files(const char *path) {
    DIR *dir = opendir(path);
    if (!dir) return;

    struct dirent *entry;
    int count = 0;
    while ((entry = readdir(dir)) && count < 3) {
        if (entry->d_name[0] == '.') continue;
        char full[512];
        snprintf(full, sizeof(full), "%s/%s", path, entry->d_name);
        check_access(full);
        count++;
    }
    closedir(dir);
}

int main() {
    const char *dirs[] = { getenv("HOME"), "/usr/bin", "/etc" };
    for (int i = 0; i < 3; i++) {
        list_dir(dirs[i]);
        try_files(dirs[i]);
    }
    return 0;
}
